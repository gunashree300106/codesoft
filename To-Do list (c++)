#include <iostream>
#include <vector>
using namespace std;

struct Task {
    string name;
    bool completed;
};

vector<Task> tasks;

void addTask() {
    Task t;
    cout << "Enter task: ";
    cin.ignore();
    getline(cin, t.name);
    t.completed = false;
    tasks.push_back(t);
    cout << "Task added!\n";
}

void viewTasks() {
    if (tasks.empty()) {
        cout << "No tasks found.\n";
        return;
    }
    cout << "\n--- To-Do List ---\n";
    for (int i = 0; i < tasks.size(); i++) {
        cout << i+1 << ". " << tasks[i].name 
             << " [" << (tasks[i].completed ? "Completed" : "Pending") << "]\n";
    }
}

void markTaskCompleted() {
    int n;
    viewTasks();
    cout << "Enter task number to mark completed: ";
    cin >> n;
    if (n > 0 && n <= tasks.size()) {
        tasks[n-1].completed = true;
        cout << "Task marked as completed!\n";
    } else {
        cout << "Invalid task number!\n";
    }
}

void removeTask() {
    int n;
    viewTasks();
    cout << "Enter task number to remove: ";
    cin >> n;
    if (n > 0 && n <= tasks.size()) {
        tasks.erase(tasks.begin() + (n-1));
        cout << "Task removed!\n";
    } else {
        cout << "Invalid task number!\n";
    }
}

int main() {
    int choice;
    do {
        cout << "\n--- TO-DO LIST MENU ---\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addTask(); break;
            case 2: viewTasks(); break;
            case 3: markTaskCompleted(); break;
            case 4: removeTask(); break;
            case 5: cout << "Exiting...\n"; break;
            default: cout << "Invalid choice!\n";
        }
    } while (choice != 5);
    return 0;
}